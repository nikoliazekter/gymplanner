<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NewGymPlannerDataSet" targetNamespace="http://tempuri.org/NewGymPlannerDataSet.xsd" xmlns:mstns="http://tempuri.org/NewGymPlannerDataSet.xsd" xmlns="http://tempuri.org/NewGymPlannerDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueryAdapter" GeneratorFunctionsComponentClassName="QueryAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueryAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NewGymPlannerConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NewGymPlannerConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Gym_Planner.Properties.Settings.GlobalReference.Default.NewGymPlannerConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Day_WorkoutTableAdapter" GeneratorDataComponentClassName="Day_WorkoutTableAdapter" Name="Day_Workout" UserDataComponentName="Day_WorkoutTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Day_Workout" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Day_Workout] WHERE (([ID_Day] = @Original_ID_Day) AND ([ID_Workout] = @Original_ID_Workout))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Day_Workout] ([ID_Day], [ID_Workout]) VALUES (@ID_Day, @ID_Workout);
SELECT ID_Day, ID_Workout FROM Day_Workout WHERE (ID_Day = @ID_Day) AND (ID_Workout = @ID_Workout)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Day, ID_Workout FROM dbo.Day_Workout</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Day_Workout] SET [ID_Day] = @ID_Day, [ID_Workout] = @ID_Workout WHERE (([ID_Day] = @Original_ID_Day) AND ([ID_Workout] = @Original_ID_Workout));
SELECT ID_Day, ID_Workout FROM Day_Workout WHERE (ID_Day = @ID_Day) AND (ID_Workout = @ID_Workout)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Day" DataSetColumn="ID_Day" />
              <Mapping SourceColumn="ID_Workout" DataSetColumn="ID_Workout" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DaysTableAdapter" GeneratorDataComponentClassName="DaysTableAdapter" Name="Days" UserDataComponentName="DaysTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Days" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Days] WHERE (([ID_Day] = @Original_ID_Day) AND ([Date] = @Original_Date))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Days] ([Date], [Comment]) VALUES (@Date, @Comment);
SELECT ID_Day, Date, Comment FROM Days WHERE (ID_Day = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comment" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Day, Date, Comment FROM dbo.Days</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Days] SET [Date] = @Date, [Comment] = @Comment WHERE (([ID_Day] = @Original_ID_Day) AND ([Date] = @Original_Date));
SELECT ID_Day, Date, Comment FROM Days WHERE (ID_Day = @ID_Day)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Comment" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Comment" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Date" Direction="Input" ParameterName="@Original_Date" Precision="0" ProviderType="Date" Scale="0" Size="0" SourceColumn="Date" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Day" ColumnName="ID_Day" DataSourceName="NewGymPlanner.dbo.Days" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Day" DataSetColumn="ID_Day" />
              <Mapping SourceColumn="Date" DataSetColumn="Date" />
              <Mapping SourceColumn="Comment" DataSetColumn="Comment" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Exercise_MuscleGroupTableAdapter" GeneratorDataComponentClassName="Exercise_MuscleGroupTableAdapter" Name="Exercise_MuscleGroup" UserDataComponentName="Exercise_MuscleGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercise_MuscleGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Exercise_MuscleGroup] WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([Name_MuscleGroup] = @Original_Name_MuscleGroup))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exercise_MuscleGroup] ([Name_Exercise], [Name_MuscleGroup]) VALUES (@Name_Exercise, @Name_MuscleGroup);
SELECT Name_Exercise, Name_MuscleGroup FROM Exercise_MuscleGroup WHERE (Name_Exercise = @Name_Exercise) AND (Name_MuscleGroup = @Name_MuscleGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name_Exercise, Name_MuscleGroup FROM dbo.Exercise_MuscleGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Exercise_MuscleGroup] SET [Name_Exercise] = @Name_Exercise, [Name_MuscleGroup] = @Name_MuscleGroup WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([Name_MuscleGroup] = @Original_Name_MuscleGroup));
SELECT Name_Exercise, Name_MuscleGroup FROM Exercise_MuscleGroup WHERE (Name_Exercise = @Name_Exercise) AND (Name_MuscleGroup = @Name_MuscleGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name_Exercise" DataSetColumn="Name_Exercise" />
              <Mapping SourceColumn="Name_MuscleGroup" DataSetColumn="Name_MuscleGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExercisesTableAdapter" GeneratorDataComponentClassName="ExercisesTableAdapter" Name="Exercises" UserDataComponentName="ExercisesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercises" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Exercises] WHERE (([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Exercises] ([Name], [Information]) VALUES (@Name, @Information);
SELECT Name, Information FROM Exercises WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Information" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Information FROM dbo.Exercises</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Exercises] SET [Name] = @Name, [Information] = @Information WHERE (([Name] = @Original_Name));
SELECT Name, Information FROM Exercises WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Information" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Information" DataSetColumn="Information" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MuscleGroupsTableAdapter" GeneratorDataComponentClassName="MuscleGroupsTableAdapter" Name="MuscleGroups" UserDataComponentName="MuscleGroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.MuscleGroups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MuscleGroups] WHERE (([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MuscleGroups] ([Name], [Information]) VALUES (@Name, @Information);
SELECT Name, Information FROM MuscleGroups WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Information" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name, Information FROM dbo.MuscleGroups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MuscleGroups] SET [Name] = @Name, [Information] = @Information WHERE (([Name] = @Original_Name));
SELECT Name, Information FROM MuscleGroups WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Information" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Information" DataSetColumn="Information" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SetsTableAdapter" GeneratorDataComponentClassName="SetsTableAdapter" Name="Sets" UserDataComponentName="SetsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Sets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sets] WHERE (([ID_Set] = @Original_ID_Set) AND ([Num_Reps] = @Original_Num_Reps) AND ([Weight] = @Original_Weight))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num_Reps" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Reps" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Weight" Precision="4" ProviderType="Decimal" Scale="1" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sets] ([Num_Reps], [Weight]) VALUES (@Num_Reps, @Weight);
SELECT ID_Set, Num_Reps, Weight FROM Sets WHERE (ID_Set = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Num_Reps" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Reps" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Weight" Precision="4" ProviderType="Decimal" Scale="1" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Set, Num_Reps, Weight FROM dbo.Sets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sets] SET [Num_Reps] = @Num_Reps, [Weight] = @Weight WHERE (([ID_Set] = @Original_ID_Set) AND ([Num_Reps] = @Original_Num_Reps) AND ([Weight] = @Original_Weight));
SELECT ID_Set, Num_Reps, Weight FROM Sets WHERE (ID_Set = @ID_Set)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Num_Reps" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Reps" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Weight" Precision="4" ProviderType="Decimal" Scale="1" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num_Reps" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Reps" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Weight" Precision="4" ProviderType="Decimal" Scale="1" Size="0" SourceColumn="Weight" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Set" ColumnName="ID_Set" DataSourceName="NewGymPlanner.dbo.Sets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Set" DataSetColumn="ID_Set" />
              <Mapping SourceColumn="Num_Reps" DataSetColumn="Num_Reps" />
              <Mapping SourceColumn="Weight" DataSetColumn="Weight" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="User_DayTableAdapter" GeneratorDataComponentClassName="User_DayTableAdapter" Name="User_Day" UserDataComponentName="User_DayTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.User_Day" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User_Day] WHERE (([Login] = @Original_Login) AND ([ID_Day] = @Original_ID_Day))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User_Day] ([Login], [ID_Day]) VALUES (@Login, @ID_Day);
SELECT Login, ID_Day FROM User_Day WHERE (ID_Day = @ID_Day) AND (Login = @Login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Login, ID_Day FROM dbo.User_Day</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User_Day] SET [Login] = @Login, [ID_Day] = @ID_Day WHERE (([Login] = @Original_Login) AND ([ID_Day] = @Original_ID_Day));
SELECT Login, ID_Day FROM User_Day WHERE (ID_Day = @ID_Day) AND (Login = @Login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Day" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Day" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="ID_Day" DataSetColumn="ID_Day" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([Login] = @Original_Login) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([Login], [Password], [Name]) VALUES (@Login, @Password, @Name);
SELECT Login, Password, Name FROM Users WHERE (Login = @Login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Login, Password, Name FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [Login] = @Login, [Password] = @Password, [Name] = @Name WHERE (([Login] = @Original_Login) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT Login, Password, Name FROM Users WHERE (Login = @Login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Workout_ExerciseTableAdapter" GeneratorDataComponentClassName="Workout_ExerciseTableAdapter" Name="Workout_Exercise" UserDataComponentName="Workout_ExerciseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Workout_Exercise" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Workout_Exercise] WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([ID_Workout] = @Original_ID_Workout))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Workout_Exercise] ([Name_Exercise], [ID_Workout]) VALUES (@Name_Exercise, @ID_Workout);
SELECT Name_Exercise, ID_Workout FROM Workout_Exercise WHERE (ID_Workout = @ID_Workout) AND (Name_Exercise = @Name_Exercise)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Name_Exercise, ID_Workout FROM dbo.Workout_Exercise</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Workout_Exercise] SET [Name_Exercise] = @Name_Exercise, [ID_Workout] = @ID_Workout WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([ID_Workout] = @Original_ID_Workout));
SELECT Name_Exercise, ID_Workout FROM Workout_Exercise WHERE (ID_Workout = @ID_Workout) AND (Name_Exercise = @Name_Exercise)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name_Exercise" DataSetColumn="Name_Exercise" />
              <Mapping SourceColumn="ID_Workout" DataSetColumn="ID_Workout" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Workout_SetTableAdapter" GeneratorDataComponentClassName="Workout_SetTableAdapter" Name="Workout_Set" UserDataComponentName="Workout_SetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Workout_Set" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Workout_Set] WHERE (([ID_Workout] = @Original_ID_Workout) AND ([ID_Set] = @Original_ID_Set))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Workout_Set] ([ID_Workout], [ID_Set]) VALUES (@ID_Workout, @ID_Set);
SELECT ID_Workout, ID_Set FROM Workout_Set WHERE (ID_Set = @ID_Set) AND (ID_Workout = @ID_Workout)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Workout, ID_Set FROM dbo.Workout_Set</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Workout_Set] SET [ID_Workout] = @ID_Workout, [ID_Set] = @ID_Set WHERE (([ID_Workout] = @Original_ID_Workout) AND ([ID_Set] = @Original_ID_Set));
SELECT ID_Workout, ID_Set FROM Workout_Set WHERE (ID_Set = @ID_Set) AND (ID_Workout = @ID_Workout)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Set" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Set" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Workout" DataSetColumn="ID_Workout" />
              <Mapping SourceColumn="ID_Set" DataSetColumn="ID_Set" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="WorkoutsTableAdapter" GeneratorDataComponentClassName="WorkoutsTableAdapter" Name="Workouts" UserDataComponentName="WorkoutsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Workouts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Workouts] WHERE (([ID_Workout] = @Original_ID_Workout) AND ([Num_Sets] = @Original_Num_Sets))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num_Sets" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Sets" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Workouts] ([Num_Sets]) VALUES (@Num_Sets);
SELECT ID_Workout, Num_Sets FROM Workouts WHERE (ID_Workout = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Num_Sets" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Sets" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Workout, Num_Sets FROM dbo.Workouts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Workouts] SET [Num_Sets] = @Num_Sets WHERE (([ID_Workout] = @Original_ID_Workout) AND ([Num_Sets] = @Original_Num_Sets));
SELECT ID_Workout, Num_Sets FROM Workouts WHERE (ID_Workout = @ID_Workout)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Num_Sets" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Sets" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Num_Sets" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Num_Sets" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Workout" ColumnName="ID_Workout" DataSourceName="NewGymPlanner.dbo.Workouts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID_Workout" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID_Workout" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Workout" DataSetColumn="ID_Workout" />
              <Mapping SourceColumn="Num_Sets" DataSetColumn="Num_Sets" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Exercise_MuscleGroup1TableAdapter" GeneratorDataComponentClassName="Exercise_MuscleGroup1TableAdapter" Name="Exercise_MuscleGroup1" UserDataComponentName="Exercise_MuscleGroup1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercise_MuscleGroup" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Exercise_MuscleGroup] WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([Name_MuscleGroup] = @Original_Name_MuscleGroup))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Exercise_MuscleGroup] ([Name_Exercise], [Name_MuscleGroup]) VALUES (@Name_Exercise, @Name_MuscleGroup);
SELECT Name_Exercise, Name_MuscleGroup FROM Exercise_MuscleGroup WHERE (Name_Exercise = @Name_Exercise) AND (Name_MuscleGroup = @Name_MuscleGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Name_Exercise, Name_MuscleGroup FROM Exercise_MuscleGroup WHERE (Name_MuscleGroup = @groupName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="groupName" ColumnName="Name_MuscleGroup" DataSourceName="NewGymPlanner.dbo.Exercise_MuscleGroup" DataTypeServer="nchar(20)" DbType="String" Direction="Input" ParameterName="@groupName" Precision="0" ProviderType="NChar" Scale="0" Size="20" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Exercise_MuscleGroup] SET [Name_Exercise] = @Name_Exercise, [Name_MuscleGroup] = @Name_MuscleGroup WHERE (([Name_Exercise] = @Original_Name_Exercise) AND ([Name_MuscleGroup] = @Original_Name_MuscleGroup));
SELECT Name_Exercise, Name_MuscleGroup FROM Exercise_MuscleGroup WHERE (Name_Exercise = @Name_Exercise) AND (Name_MuscleGroup = @Name_MuscleGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_Exercise" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_Exercise" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name_MuscleGroup" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name_MuscleGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name_Exercise" DataSetColumn="Name_Exercise" />
              <Mapping SourceColumn="Name_MuscleGroup" DataSetColumn="Name_MuscleGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExercisesNameTableAdapter" GeneratorDataComponentClassName="ExercisesNameTableAdapter" Name="ExercisesName" UserDataComponentName="ExercisesNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercises" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Exercises] WHERE (([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Exercises.Name FROM Exercises</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Exercises] SET [Name] = @Name WHERE (([Name] = @Original_Name));
SELECT Name FROM Exercises WHERE (Name = @Name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercises" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Exercises.Name FROM Exercises</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectName="NewGymPlanner.dbo.Exercises" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="FillBy1" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Exercises.Name FROM Exercises</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CheckUserExists" MethodsParameterType="CLR" Modifier="Public" Name="CheckUserExists" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CheckUserExists">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Login) FROM Users WHERE Login = @login AND Password = @password</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="Login" DataSourceName="NewGymPlanner.dbo.Users" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="Password" DataSourceName="NewGymPlanner.dbo.Users" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CheckLoginExists" MethodsParameterType="CLR" Modifier="Public" Name="CheckLoginExists" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="CheckLoginExists">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Login) FROM Users WHERE Login = @login</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="Login" DataSourceName="NewGymPlanner.dbo.Users" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="NewGymPlannerConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="CheckExerciseExists" MethodsParameterType="CLR" Modifier="Public" Name="CheckExerciseExists" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="CheckExerciseExists">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Name) FROM Exercises WHERE Name = @name</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="Name" DataSourceName="NewGymPlanner.dbo.Exercises" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NewGymPlannerDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="NewGymPlannerDataSet" msprop:Generator_UserDSName="NewGymPlannerDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Day_Workout" msprop:Generator_TableClassName="Day_WorkoutDataTable" msprop:Generator_TableVarName="tableDay_Workout" msprop:Generator_TablePropName="Day_Workout" msprop:Generator_RowDeletingName="Day_WorkoutRowDeleting" msprop:Generator_RowChangingName="Day_WorkoutRowChanging" msprop:Generator_RowEvHandlerName="Day_WorkoutRowChangeEventHandler" msprop:Generator_RowDeletedName="Day_WorkoutRowDeleted" msprop:Generator_UserTableName="Day_Workout" msprop:Generator_RowChangedName="Day_WorkoutRowChanged" msprop:Generator_RowEvArgName="Day_WorkoutRowChangeEvent" msprop:Generator_RowClassName="Day_WorkoutRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Day" msprop:Generator_ColumnVarNameInTable="columnID_Day" msprop:Generator_ColumnPropNameInRow="ID_Day" msprop:Generator_ColumnPropNameInTable="ID_DayColumn" msprop:Generator_UserColumnName="ID_Day" type="xs:int" />
              <xs:element name="ID_Workout" msprop:Generator_ColumnVarNameInTable="columnID_Workout" msprop:Generator_ColumnPropNameInRow="ID_Workout" msprop:Generator_ColumnPropNameInTable="ID_WorkoutColumn" msprop:Generator_UserColumnName="ID_Workout" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Days" msprop:Generator_TableClassName="DaysDataTable" msprop:Generator_TableVarName="tableDays" msprop:Generator_TablePropName="Days" msprop:Generator_RowDeletingName="DaysRowDeleting" msprop:Generator_RowChangingName="DaysRowChanging" msprop:Generator_RowEvHandlerName="DaysRowChangeEventHandler" msprop:Generator_RowDeletedName="DaysRowDeleted" msprop:Generator_UserTableName="Days" msprop:Generator_RowChangedName="DaysRowChanged" msprop:Generator_RowEvArgName="DaysRowChangeEvent" msprop:Generator_RowClassName="DaysRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Day" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Day" msprop:Generator_ColumnPropNameInRow="ID_Day" msprop:Generator_ColumnPropNameInTable="ID_DayColumn" msprop:Generator_UserColumnName="ID_Day" type="xs:int" />
              <xs:element name="Date" msprop:Generator_ColumnVarNameInTable="columnDate" msprop:Generator_ColumnPropNameInRow="Date" msprop:Generator_ColumnPropNameInTable="DateColumn" msprop:Generator_UserColumnName="Date" type="xs:dateTime" />
              <xs:element name="Comment" msprop:Generator_ColumnVarNameInTable="columnComment" msprop:Generator_ColumnPropNameInRow="Comment" msprop:Generator_ColumnPropNameInTable="CommentColumn" msprop:Generator_UserColumnName="Comment">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exercise_MuscleGroup" msprop:Generator_TableClassName="Exercise_MuscleGroupDataTable" msprop:Generator_TableVarName="tableExercise_MuscleGroup" msprop:Generator_TablePropName="Exercise_MuscleGroup" msprop:Generator_RowDeletingName="Exercise_MuscleGroupRowDeleting" msprop:Generator_RowChangingName="Exercise_MuscleGroupRowChanging" msprop:Generator_RowEvHandlerName="Exercise_MuscleGroupRowChangeEventHandler" msprop:Generator_RowDeletedName="Exercise_MuscleGroupRowDeleted" msprop:Generator_UserTableName="Exercise_MuscleGroup" msprop:Generator_RowChangedName="Exercise_MuscleGroupRowChanged" msprop:Generator_RowEvArgName="Exercise_MuscleGroupRowChangeEvent" msprop:Generator_RowClassName="Exercise_MuscleGroupRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name_Exercise" msprop:Generator_ColumnVarNameInTable="columnName_Exercise" msprop:Generator_ColumnPropNameInRow="Name_Exercise" msprop:Generator_ColumnPropNameInTable="Name_ExerciseColumn" msprop:Generator_UserColumnName="Name_Exercise">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name_MuscleGroup" msprop:Generator_ColumnVarNameInTable="columnName_MuscleGroup" msprop:Generator_ColumnPropNameInRow="Name_MuscleGroup" msprop:Generator_ColumnPropNameInTable="Name_MuscleGroupColumn" msprop:Generator_UserColumnName="Name_MuscleGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exercises" msprop:Generator_TableClassName="ExercisesDataTable" msprop:Generator_TableVarName="tableExercises" msprop:Generator_TablePropName="Exercises" msprop:Generator_RowDeletingName="ExercisesRowDeleting" msprop:Generator_RowChangingName="ExercisesRowChanging" msprop:Generator_RowEvHandlerName="ExercisesRowChangeEventHandler" msprop:Generator_RowDeletedName="ExercisesRowDeleted" msprop:Generator_UserTableName="Exercises" msprop:Generator_RowChangedName="ExercisesRowChanged" msprop:Generator_RowEvArgName="ExercisesRowChangeEvent" msprop:Generator_RowClassName="ExercisesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Information" msprop:Generator_ColumnVarNameInTable="columnInformation" msprop:Generator_ColumnPropNameInRow="Information" msprop:Generator_ColumnPropNameInTable="InformationColumn" msprop:Generator_UserColumnName="Information">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MuscleGroups" msprop:Generator_TableClassName="MuscleGroupsDataTable" msprop:Generator_TableVarName="tableMuscleGroups" msprop:Generator_TablePropName="MuscleGroups" msprop:Generator_RowDeletingName="MuscleGroupsRowDeleting" msprop:Generator_RowChangingName="MuscleGroupsRowChanging" msprop:Generator_RowEvHandlerName="MuscleGroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="MuscleGroupsRowDeleted" msprop:Generator_UserTableName="MuscleGroups" msprop:Generator_RowChangedName="MuscleGroupsRowChanged" msprop:Generator_RowEvArgName="MuscleGroupsRowChangeEvent" msprop:Generator_RowClassName="MuscleGroupsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Information" msprop:Generator_ColumnVarNameInTable="columnInformation" msprop:Generator_ColumnPropNameInRow="Information" msprop:Generator_ColumnPropNameInTable="InformationColumn" msprop:Generator_UserColumnName="Information">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sets" msprop:Generator_TableClassName="SetsDataTable" msprop:Generator_TableVarName="tableSets" msprop:Generator_TablePropName="Sets" msprop:Generator_RowDeletingName="SetsRowDeleting" msprop:Generator_RowChangingName="SetsRowChanging" msprop:Generator_RowEvHandlerName="SetsRowChangeEventHandler" msprop:Generator_RowDeletedName="SetsRowDeleted" msprop:Generator_UserTableName="Sets" msprop:Generator_RowChangedName="SetsRowChanged" msprop:Generator_RowEvArgName="SetsRowChangeEvent" msprop:Generator_RowClassName="SetsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Set" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Set" msprop:Generator_ColumnPropNameInRow="ID_Set" msprop:Generator_ColumnPropNameInTable="ID_SetColumn" msprop:Generator_UserColumnName="ID_Set" type="xs:int" />
              <xs:element name="Num_Reps" msprop:Generator_ColumnVarNameInTable="columnNum_Reps" msprop:Generator_ColumnPropNameInRow="Num_Reps" msprop:Generator_ColumnPropNameInTable="Num_RepsColumn" msprop:Generator_UserColumnName="Num_Reps" type="xs:int" />
              <xs:element name="Weight" msprop:Generator_ColumnVarNameInTable="columnWeight" msprop:Generator_ColumnPropNameInRow="Weight" msprop:Generator_ColumnPropNameInTable="WeightColumn" msprop:Generator_UserColumnName="Weight" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User_Day" msprop:Generator_TableClassName="User_DayDataTable" msprop:Generator_TableVarName="tableUser_Day" msprop:Generator_TablePropName="User_Day" msprop:Generator_RowDeletingName="User_DayRowDeleting" msprop:Generator_RowChangingName="User_DayRowChanging" msprop:Generator_RowEvHandlerName="User_DayRowChangeEventHandler" msprop:Generator_RowDeletedName="User_DayRowDeleted" msprop:Generator_UserTableName="User_Day" msprop:Generator_RowChangedName="User_DayRowChanged" msprop:Generator_RowEvArgName="User_DayRowChangeEvent" msprop:Generator_RowClassName="User_DayRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_Day" msprop:Generator_ColumnVarNameInTable="columnID_Day" msprop:Generator_ColumnPropNameInRow="ID_Day" msprop:Generator_ColumnPropNameInTable="ID_DayColumn" msprop:Generator_UserColumnName="ID_Day" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_RowClassName="UsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Workout_Exercise" msprop:Generator_TableClassName="Workout_ExerciseDataTable" msprop:Generator_TableVarName="tableWorkout_Exercise" msprop:Generator_TablePropName="Workout_Exercise" msprop:Generator_RowDeletingName="Workout_ExerciseRowDeleting" msprop:Generator_RowChangingName="Workout_ExerciseRowChanging" msprop:Generator_RowEvHandlerName="Workout_ExerciseRowChangeEventHandler" msprop:Generator_RowDeletedName="Workout_ExerciseRowDeleted" msprop:Generator_UserTableName="Workout_Exercise" msprop:Generator_RowChangedName="Workout_ExerciseRowChanged" msprop:Generator_RowEvArgName="Workout_ExerciseRowChangeEvent" msprop:Generator_RowClassName="Workout_ExerciseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name_Exercise" msprop:Generator_ColumnVarNameInTable="columnName_Exercise" msprop:Generator_ColumnPropNameInRow="Name_Exercise" msprop:Generator_ColumnPropNameInTable="Name_ExerciseColumn" msprop:Generator_UserColumnName="Name_Exercise">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ID_Workout" msprop:Generator_ColumnVarNameInTable="columnID_Workout" msprop:Generator_ColumnPropNameInRow="ID_Workout" msprop:Generator_ColumnPropNameInTable="ID_WorkoutColumn" msprop:Generator_UserColumnName="ID_Workout" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Workout_Set" msprop:Generator_TableClassName="Workout_SetDataTable" msprop:Generator_TableVarName="tableWorkout_Set" msprop:Generator_TablePropName="Workout_Set" msprop:Generator_RowDeletingName="Workout_SetRowDeleting" msprop:Generator_RowChangingName="Workout_SetRowChanging" msprop:Generator_RowEvHandlerName="Workout_SetRowChangeEventHandler" msprop:Generator_RowDeletedName="Workout_SetRowDeleted" msprop:Generator_UserTableName="Workout_Set" msprop:Generator_RowChangedName="Workout_SetRowChanged" msprop:Generator_RowEvArgName="Workout_SetRowChangeEvent" msprop:Generator_RowClassName="Workout_SetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Workout" msprop:Generator_ColumnVarNameInTable="columnID_Workout" msprop:Generator_ColumnPropNameInRow="ID_Workout" msprop:Generator_ColumnPropNameInTable="ID_WorkoutColumn" msprop:Generator_UserColumnName="ID_Workout" type="xs:int" />
              <xs:element name="ID_Set" msprop:Generator_ColumnVarNameInTable="columnID_Set" msprop:Generator_ColumnPropNameInRow="ID_Set" msprop:Generator_ColumnPropNameInTable="ID_SetColumn" msprop:Generator_UserColumnName="ID_Set" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Workouts" msprop:Generator_TableClassName="WorkoutsDataTable" msprop:Generator_TableVarName="tableWorkouts" msprop:Generator_TablePropName="Workouts" msprop:Generator_RowDeletingName="WorkoutsRowDeleting" msprop:Generator_RowChangingName="WorkoutsRowChanging" msprop:Generator_RowEvHandlerName="WorkoutsRowChangeEventHandler" msprop:Generator_RowDeletedName="WorkoutsRowDeleted" msprop:Generator_UserTableName="Workouts" msprop:Generator_RowChangedName="WorkoutsRowChanged" msprop:Generator_RowEvArgName="WorkoutsRowChangeEvent" msprop:Generator_RowClassName="WorkoutsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Workout" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID_Workout" msprop:Generator_ColumnPropNameInRow="ID_Workout" msprop:Generator_ColumnPropNameInTable="ID_WorkoutColumn" msprop:Generator_UserColumnName="ID_Workout" type="xs:int" />
              <xs:element name="Num_Sets" msprop:Generator_ColumnVarNameInTable="columnNum_Sets" msprop:Generator_ColumnPropNameInRow="Num_Sets" msprop:Generator_ColumnPropNameInTable="Num_SetsColumn" msprop:Generator_UserColumnName="Num_Sets" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Exercise_MuscleGroup1" msprop:Generator_TableClassName="Exercise_MuscleGroup1DataTable" msprop:Generator_TableVarName="tableExercise_MuscleGroup1" msprop:Generator_RowChangedName="Exercise_MuscleGroup1RowChanged" msprop:Generator_TablePropName="Exercise_MuscleGroup1" msprop:Generator_RowDeletingName="Exercise_MuscleGroup1RowDeleting" msprop:Generator_RowChangingName="Exercise_MuscleGroup1RowChanging" msprop:Generator_RowEvHandlerName="Exercise_MuscleGroup1RowChangeEventHandler" msprop:Generator_RowDeletedName="Exercise_MuscleGroup1RowDeleted" msprop:Generator_RowClassName="Exercise_MuscleGroup1Row" msprop:Generator_UserTableName="Exercise_MuscleGroup1" msprop:Generator_RowEvArgName="Exercise_MuscleGroup1RowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name_Exercise" msprop:Generator_ColumnVarNameInTable="columnName_Exercise" msprop:Generator_ColumnPropNameInRow="Name_Exercise" msprop:Generator_ColumnPropNameInTable="Name_ExerciseColumn" msprop:Generator_UserColumnName="Name_Exercise">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Name_MuscleGroup" msprop:Generator_ColumnVarNameInTable="columnName_MuscleGroup" msprop:Generator_ColumnPropNameInRow="Name_MuscleGroup" msprop:Generator_ColumnPropNameInTable="Name_MuscleGroupColumn" msprop:Generator_UserColumnName="Name_MuscleGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExercisesName" msprop:Generator_TableClassName="ExercisesNameDataTable" msprop:Generator_TableVarName="tableExercisesName" msprop:Generator_TablePropName="ExercisesName" msprop:Generator_RowDeletingName="ExercisesNameRowDeleting" msprop:Generator_RowChangingName="ExercisesNameRowChanging" msprop:Generator_RowEvHandlerName="ExercisesNameRowChangeEventHandler" msprop:Generator_RowDeletedName="ExercisesNameRowDeleted" msprop:Generator_UserTableName="ExercisesName" msprop:Generator_RowChangedName="ExercisesNameRowChanged" msprop:Generator_RowEvArgName="ExercisesNameRowChangeEvent" msprop:Generator_RowClassName="ExercisesNameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Day_Workout" />
      <xs:field xpath="mstns:ID_Day" />
      <xs:field xpath="mstns:ID_Workout" />
    </xs:unique>
    <xs:unique name="Days_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Days" />
      <xs:field xpath="mstns:ID_Day" />
    </xs:unique>
    <xs:unique name="Exercise_MuscleGroup_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exercise_MuscleGroup" />
      <xs:field xpath="mstns:Name_Exercise" />
      <xs:field xpath="mstns:Name_MuscleGroup" />
    </xs:unique>
    <xs:unique name="Exercises_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exercises" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="MuscleGroups_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MuscleGroups" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
    <xs:unique name="Sets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sets" />
      <xs:field xpath="mstns:ID_Set" />
    </xs:unique>
    <xs:unique name="User_Day_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User_Day" />
      <xs:field xpath="mstns:Login" />
      <xs:field xpath="mstns:ID_Day" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:Login" />
    </xs:unique>
    <xs:unique name="Workout_Exercise_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Workout_Exercise" />
      <xs:field xpath="mstns:Name_Exercise" />
      <xs:field xpath="mstns:ID_Workout" />
    </xs:unique>
    <xs:unique name="Workout_Set_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Workout_Set" />
      <xs:field xpath="mstns:ID_Workout" />
      <xs:field xpath="mstns:ID_Set" />
    </xs:unique>
    <xs:unique name="Workouts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Workouts" />
      <xs:field xpath="mstns:ID_Workout" />
    </xs:unique>
    <xs:unique name="Exercise_MuscleGroup1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Exercise_MuscleGroup1" />
      <xs:field xpath="mstns:Name_Exercise" />
      <xs:field xpath="mstns:Name_MuscleGroup" />
    </xs:unique>
    <xs:unique name="ExercisesName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExercisesName" />
      <xs:field xpath="mstns:Name" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Day_Workout_Days" msdata:parent="Days" msdata:child="Day_Workout" msdata:parentkey="ID_Day" msdata:childkey="ID_Day" msprop:Generator_UserChildTable="Day_Workout" msprop:Generator_ChildPropName="GetDay_WorkoutRows" msprop:Generator_UserRelationName="FK_Day_Workout_Days" msprop:Generator_RelationVarName="relationFK_Day_Workout_Days" msprop:Generator_UserParentTable="Days" msprop:Generator_ParentPropName="DaysRow" />
      <msdata:Relationship name="FK_Day_Workout_Workouts" msdata:parent="Workouts" msdata:child="Day_Workout" msdata:parentkey="ID_Workout" msdata:childkey="ID_Workout" msprop:Generator_UserChildTable="Day_Workout" msprop:Generator_ChildPropName="GetDay_WorkoutRows" msprop:Generator_UserRelationName="FK_Day_Workout_Workouts" msprop:Generator_RelationVarName="relationFK_Day_Workout_Workouts" msprop:Generator_UserParentTable="Workouts" msprop:Generator_ParentPropName="WorkoutsRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_Exercises" msdata:parent="Exercises" msdata:child="Exercise_MuscleGroup" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Exercise_MuscleGroup" msprop:Generator_ChildPropName="GetExercise_MuscleGroupRows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_Exercises" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_Exercises" msprop:Generator_UserParentTable="Exercises" msprop:Generator_ParentPropName="ExercisesRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_MuscleGroups" msdata:parent="MuscleGroups" msdata:child="Exercise_MuscleGroup" msdata:parentkey="Name" msdata:childkey="Name_MuscleGroup" msprop:Generator_UserChildTable="Exercise_MuscleGroup" msprop:Generator_ChildPropName="GetExercise_MuscleGroupRows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_MuscleGroups" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_MuscleGroups" msprop:Generator_UserParentTable="MuscleGroups" msprop:Generator_ParentPropName="MuscleGroupsRow" />
      <msdata:Relationship name="FK_User_Day_Days" msdata:parent="Days" msdata:child="User_Day" msdata:parentkey="ID_Day" msdata:childkey="ID_Day" msprop:Generator_UserChildTable="User_Day" msprop:Generator_ChildPropName="GetUser_DayRows" msprop:Generator_UserRelationName="FK_User_Day_Days" msprop:Generator_ParentPropName="DaysRow" msprop:Generator_RelationVarName="relationFK_User_Day_Days" msprop:Generator_UserParentTable="Days" />
      <msdata:Relationship name="FK_User_Day_Users" msdata:parent="Users" msdata:child="User_Day" msdata:parentkey="Login" msdata:childkey="Login" msprop:Generator_UserChildTable="User_Day" msprop:Generator_ChildPropName="GetUser_DayRows" msprop:Generator_UserRelationName="FK_User_Day_Users" msprop:Generator_RelationVarName="relationFK_User_Day_Users" msprop:Generator_UserParentTable="Users" msprop:Generator_ParentPropName="UsersRow" />
      <msdata:Relationship name="FK_Workout_Exercise_Exercises" msdata:parent="Exercises" msdata:child="Workout_Exercise" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Workout_Exercise" msprop:Generator_ChildPropName="GetWorkout_ExerciseRows" msprop:Generator_UserRelationName="FK_Workout_Exercise_Exercises" msprop:Generator_ParentPropName="ExercisesRow" msprop:Generator_RelationVarName="relationFK_Workout_Exercise_Exercises" msprop:Generator_UserParentTable="Exercises" />
      <msdata:Relationship name="FK_Workout_Exercise_Workouts" msdata:parent="Workouts" msdata:child="Workout_Exercise" msdata:parentkey="ID_Workout" msdata:childkey="ID_Workout" msprop:Generator_UserChildTable="Workout_Exercise" msprop:Generator_ChildPropName="GetWorkout_ExerciseRows" msprop:Generator_UserRelationName="FK_Workout_Exercise_Workouts" msprop:Generator_RelationVarName="relationFK_Workout_Exercise_Workouts" msprop:Generator_UserParentTable="Workouts" msprop:Generator_ParentPropName="WorkoutsRow" />
      <msdata:Relationship name="FK_Workout_Set_Sets" msdata:parent="Sets" msdata:child="Workout_Set" msdata:parentkey="ID_Set" msdata:childkey="ID_Set" msprop:Generator_UserChildTable="Workout_Set" msprop:Generator_ChildPropName="GetWorkout_SetRows" msprop:Generator_UserRelationName="FK_Workout_Set_Sets" msprop:Generator_ParentPropName="SetsRow" msprop:Generator_RelationVarName="relationFK_Workout_Set_Sets" msprop:Generator_UserParentTable="Sets" />
      <msdata:Relationship name="FK_Workout_Set_Workouts" msdata:parent="Workouts" msdata:child="Workout_Set" msdata:parentkey="ID_Workout" msdata:childkey="ID_Workout" msprop:Generator_UserChildTable="Workout_Set" msprop:Generator_ChildPropName="GetWorkout_SetRows" msprop:Generator_UserRelationName="FK_Workout_Set_Workouts" msprop:Generator_RelationVarName="relationFK_Workout_Set_Workouts" msprop:Generator_UserParentTable="Workouts" msprop:Generator_ParentPropName="WorkoutsRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_Exercises1" msdata:parent="Exercises" msdata:child="Exercise_MuscleGroup1" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Exercise_MuscleGroup1" msprop:Generator_ChildPropName="GetExercise_MuscleGroup1Rows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_Exercises1" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_Exercises1" msprop:Generator_UserParentTable="Exercises" msprop:Generator_ParentPropName="ExercisesRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_MuscleGroups1" msdata:parent="MuscleGroups" msdata:child="Exercise_MuscleGroup1" msdata:parentkey="Name" msdata:childkey="Name_MuscleGroup" msprop:Generator_UserChildTable="Exercise_MuscleGroup1" msprop:Generator_ChildPropName="GetExercise_MuscleGroup1Rows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_MuscleGroups1" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_MuscleGroups1" msprop:Generator_UserParentTable="MuscleGroups" msprop:Generator_ParentPropName="MuscleGroupsRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_Exercises2" msdata:parent="ExercisesName" msdata:child="Exercise_MuscleGroup" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Exercise_MuscleGroup" msprop:Generator_ChildPropName="GetExercise_MuscleGroupRows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_Exercises2" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_Exercises2" msprop:Generator_UserParentTable="ExercisesName" msprop:Generator_ParentPropName="ExercisesNameRow" />
      <msdata:Relationship name="FK_Workout_Exercise_Exercises1" msdata:parent="ExercisesName" msdata:child="Workout_Exercise" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Workout_Exercise" msprop:Generator_ChildPropName="GetWorkout_ExerciseRows" msprop:Generator_UserRelationName="FK_Workout_Exercise_Exercises1" msprop:Generator_RelationVarName="relationFK_Workout_Exercise_Exercises1" msprop:Generator_UserParentTable="ExercisesName" msprop:Generator_ParentPropName="ExercisesNameRow" />
      <msdata:Relationship name="FK_Exercise_MuscleGroup_Exercises3" msdata:parent="ExercisesName" msdata:child="Exercise_MuscleGroup1" msdata:parentkey="Name" msdata:childkey="Name_Exercise" msprop:Generator_UserChildTable="Exercise_MuscleGroup1" msprop:Generator_ChildPropName="GetExercise_MuscleGroup1Rows" msprop:Generator_UserRelationName="FK_Exercise_MuscleGroup_Exercises3" msprop:Generator_RelationVarName="relationFK_Exercise_MuscleGroup_Exercises3" msprop:Generator_UserParentTable="ExercisesName" msprop:Generator_ParentPropName="ExercisesNameRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>